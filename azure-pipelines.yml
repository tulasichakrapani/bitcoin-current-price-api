trigger:
  batch: true
  branches:
    include:
    - feature/*
    - develop
    - master
    exclude:
    - 'refs/tags/*'
  paths:
    exclude:
    - azure-pipelines.yml
    - pom.xml

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: VARIABLE_GROUP
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTIONS
  value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:
# Cache files between runs
# Reference: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/cache?view=azure-devops
- task: CacheBeta@0
  displayName: Cache Maven Local Repo
  inputs:
    key: $(Build.SourcesDirectory)/pom.xml
    path: $(MAVEN_CACHE_FOLDER)
  

# Download a secure file to the agent machine
# Reference: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/download-secure-file?view=azure-devops
- task: DownloadSecureFile@1
#The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
  name: MavenSettingsXML 
  inputs:
    secureFile: 'settings.xml'

# Run a PowerShell script on Linux, macOS, or Windows
# Reference: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/powershell?view=azure-devops
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      New-Item -Type Directory -Force "${HOME}/.m2"
      Copy-Item -Force "$(MavenSettingsXML.secureFilePath)" "${HOME}/.m2/settings.xml"

# Build, test, and deploy with Apache Maven
# Reference: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/maven?view=azure-devops      
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    mavenAuthenticateFeed: true
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    effectivePomSkip: true
    sonarQubeRunAnalysis: false
    goals: 'clean install package deploy $(MAVEN_OPTIONS)  -DmuleDeploy -Dserver=$(server) -Denvironment=$(environment) -Dworkers=$(workers) -DworkerType=$(workerType) -DmuleVersion=$(muleVersion) -DapplicationName=$(applicationName)'